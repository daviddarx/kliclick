
@import 'reset-css/reset.css';

* {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0.1);
}

::selection {
  background: #fff;
  color: #000;
  text-shadow: none;
}

html {
  --s-picture-margin-bottom: 10vh;
  --c-background: rgba(0, 0, 0, 1);
  --c-interaction: #fff;
  --d-c-interaction: 0.2s;
  --e-out: cubic-bezier(0.165, 0.84, 0.44, 1); //quart
  --e-inout: cubic-bezier(0.77, 0, 0.175, 1); //quart
}

body {
  background-color: var(--c-background);
  font-family: Arial, Helvetica, sans-serif;

  &::before {
    content: "";
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #fff;
    transform: scaleY(0);
    transform-origin: top left;
    transition: transform var(--e-inout) 0.5s;
    will-change: transform;
  }

  &.is-inverted {
    --c-interaction: rgba(0, 0, 0, 0.95);

    &::before {
      transform: scaleY(1);
    }
  }
}

.lightmode-button {
  --s-button: 24px;
  --s-margin: 40px;

  cursor: pointer;
  position: fixed;
  z-index: 100;
  overflow: hidden;
  top: var(--s-margin);
  right: var(--s-margin);
  width: var(--s-button);
  height: var(--s-button);
  border-radius: 100%;
  border: 1px solid var(--c-interaction);
  transition: border-color ease-out var(--d-c-interaction);

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: calc(var(--s-button) * 0.5);
    height: var(--s-button);
    background-color: var(--c-interaction);
    transition: width var(--e-out) 0.2s, background-color ease-out var(--d-c-interaction);
  }

  &:hover {
    &::before {
      width: var(--s-button);
    }
  }
}

.navigation-button {
  --s-height: 48px;
  --s-width: 24px;
  --s-margin: 40px;
  --s-spacing: 16px;
  --r-arrow: 90deg;

  position: fixed;
  cursor: pointer;
  z-index: 100;
  bottom: var(--s-margin);
  right: var(--s-margin);
  width: var(--s-width);
  height: var(--s-height);

  &::before,
  &::after {
    content: "";
    display: block;
    position: absolute;
    width: 50%;
    height: 1px;
    top: 0;
    left: 0;
    background-color: var(--c-interaction);
    transform-origin: top right;
    transform: rotate(0deg);
    transition: transform var(--e-out) 0.2s, background-color ease-out var(--d-c-interaction);
  }

  &::after {
    left: 50%;
    transform-origin: bottom left;
  }

  &:hover {
    &::before,
    &::after {
      transform: rotate(calc(var(--r-arrow) * -1));
    }

    &::after {
      transform: rotate(var(--r-arrow));
    }
  }

  &--prev {
    bottom: calc(var(--s-margin) + var(--s-height) + var(--s-spacing));
  }

  &--next {
    transform: scaleY(-1);
  }

  &__line {
    display: block;
    position: absolute;
    width: 1px;
    height: 100%;
    left: 50%;
    background-color: var(--c-interaction);
    transition: background-color ease-out var(--d-c-interaction);
  }
}

.pictures {
  margin: 0 auto;
  padding-bottom: var(--s-picture-margin-bottom);
}

.picture {
  $root: #{&};

  display: none;
  position: relative;
  overflow: hidden;
  margin-top: calc(var(--s-picture-margin-bottom) * 0.5);
  margin-bottom: calc(var(--s-picture-margin-bottom) * 0.5);

  &.is-loaded {
    display: block;
  }

  &:nth-child(2n) {
    margin-left: auto;
    margin-right: 0;
  }

  &__el {
    display: block;
    width: 100%;
    max-width: 100%;
    transition: transform var(--e-out) 1.5s;
    will-change: transform;

    #{$root}.is-masked & {
      transform: scale(1.5);
    }

    #{$root}.is-masked.is-active & {
      transform: scale(1);
    }
  }

  &__mask {
    position: absolute;
    display: none;
    z-index: 100;
    left: 0;
    width: 100%;
    height: 100%;

    #{$root}.is-masked & {
      display: flex;
    }
  }

  &__rect {
    --d-delay: 0.05;

    width: 10%;
    height: 100%;
    background-color: var(--c-background);
    transition: transform var(--e-inout) 0.5s;
    transform-origin: top left;
    will-change: transform;

    .is-inverted & {
      background-color: white;
    }

    @for $i from 1 to 11 {
      &:nth-child(#{$i}) {
        transition-delay: calc(#{$i}s * var(--d-delay));
      }
    }

    #{$root}.is-even & {
      transform-origin: top right;

      @for $i from 1 to 11 {
        &:nth-child(#{$i}) {
          transition-delay: calc(#{11-$i}s * var(--d-delay));
        }
      }
    }

    #{$root}.is-active & {
      transform: scaleX(0);
    }
  }
}
